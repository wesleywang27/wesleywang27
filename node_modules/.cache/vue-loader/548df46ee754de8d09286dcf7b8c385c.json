{"remainingRequest":"/Users/deyi5/IdeaProjects/wesleywang27.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/deyi5/IdeaProjects/wesleywang27.github.io/src/components/Audio.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/deyi5/IdeaProjects/wesleywang27.github.io/src/components/Audio.vue","mtime":1636354262848},{"path":"/Users/deyi5/IdeaProjects/wesleywang27.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1636341352436},{"path":"/Users/deyi5/IdeaProjects/wesleywang27.github.io/node_modules/babel-loader/lib/index.js","mtime":1636341352399},{"path":"/Users/deyi5/IdeaProjects/wesleywang27.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1636341352436},{"path":"/Users/deyi5/IdeaProjects/wesleywang27.github.io/node_modules/vue-loader/lib/index.js","mtime":1636341353709}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst someSound = require(\"../audios/keyboard.mp3\"); // require the sound\n\nexport default {\n  name: \"Audio\",\n  data: () => ({\n    // you can access to the sound with this.someSound\n    // same as someSound: someSound\n    someSound\n  }),\n  methods: {\n    // Selects a note\n    // This method doesn't add value to the component, you can use\n    // this.someSound directly\n    getNote() {\n      return this.someSound;\n    },\n\n    playNote() {\n      // Plays a note, selected via getNote()\n      //let note = new Audio(this.getNote()); // or\n      let note = new Audio(this.someSound);\n      // note.play(); // new Audio will load asynchronously the audio\n      // so instead of play directly after create note, you can listen for\n      // a event and wait for it to know that the sound was loaded and can be\n      // played\n\n      // listen for the canplaythrough event\n      note.addEventListener(\"canplaythrough\", () => {\n        /* the audio is now playable; play it if permissions allow */\n        note.play(); // the audio now can be played\n      });\n    }\n  }\n};\n",{"version":3,"sources":["Audio.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Audio.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"page-promotion flex-col\">\n    <div class=\"con-play flex\" @click=\"audioPlayOrPause()\">\n      <img v-show=\"playFlag\" class=\"audio-on\" src=\"../images/seal.png\" alt=\"\">\n      <img v-show=\"!playFlag\" class=\"audio-off\" src=\"../images/seal.png\" alt=\"\">\n    </div>\n    <audio ref=\"audio\" src=\"../audios/keyboard.mp3\" autoplay loop controls preload=\"auto\"></audio>\n  </div>\n</template>\n\n<script>\nconst someSound = require(\"../audios/keyboard.mp3\"); // require the sound\n\nexport default {\n  name: \"Audio\",\n  data: () => ({\n    // you can access to the sound with this.someSound\n    // same as someSound: someSound\n    someSound\n  }),\n  methods: {\n    // Selects a note\n    // This method doesn't add value to the component, you can use\n    // this.someSound directly\n    getNote() {\n      return this.someSound;\n    },\n\n    playNote() {\n      // Plays a note, selected via getNote()\n      //let note = new Audio(this.getNote()); // or\n      let note = new Audio(this.someSound);\n      // note.play(); // new Audio will load asynchronously the audio\n      // so instead of play directly after create note, you can listen for\n      // a event and wait for it to know that the sound was loaded and can be\n      // played\n\n      // listen for the canplaythrough event\n      note.addEventListener(\"canplaythrough\", () => {\n        /* the audio is now playable; play it if permissions allow */\n        note.play(); // the audio now can be played\n      });\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n</style>"]}]}